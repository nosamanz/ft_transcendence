{"ast":null,"code":"var _jsxFileName = \"/root/React/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport L42 from '../images/42icon.png';\n// import { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUser\n}) => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n\n  // \tuseEffect(() => {\n  // \t\tconst fetchData = async () => {\n  // \t\t\tconst params = new URLSearchParams(window.location.search);\n  // \t\t\tconst code = params.get('code');\n  // \t\t\tconst data = {};\n  // \t\t\tdata[\"data\"] = code;\n\n  // \t\t\tif (!loaded) {\n  // \t\t\t\tsetLoaded(true);\n  // \t\t\t}\n  // \t\t\telse if(code)\n  // \t\t\t{\n  // \t\t\t\tconst response = await fetch('http://10.12.14.1:80/auth/42/signin_intra', {\n  // \t\t\t\tmethod: 'POST',\n  // \t\t\t\theaders: {\n  // \t\t\t\t\t'Content-Type': 'application/json',\n  // \t\t\t\t},\n  // \t\t\t\tbody: JSON.stringify( data ), // Assuming code is an object\n  // \t\t\t});\n  // \t\t\tconst responseData = await response.json();\n  // \t\t\t// {token: Jwt_Token, result: 0} The new user has been saved in database and the token has been created.\n  // \t\t\t// {token: Jwt_Token, result: 1} The user has already been saved in database and the token has been created.\n  // \t\t\t// {user_id: user_id, result: 2} The user should be redirected to the TFA page.\n  // \t\t\tif(responseData.result !== 2)\n  // \t\t\t{\n  // \t\t\t\tcookies.set(\"jwt_authorization\", responseData.token);\n  // \t\t\t}\n  // \t\t\telse\n  // \t\t\t{\n  // \t\t\t\t//TFA PAGE\n  // \t\t\t}\n  // \t\t\tconsole.log(responseData.token);\n  // \t\t\tconst responseUser = await fetch(\"http://10.12.14.1:80/user\", {\n  // \t\t\t\theaders: {\n  // \t\t\t\t\t'authorization': 'Bearer ' + cookies.get(\"jwt_authorization\"),\n  // \t\t\t\t\t'Content-Type': 'application/json'\n  // \t\t\t\t}\n  // \t\t\t});\n  // \t\t\tconst UserData = await responseUser.json();\n  // \t\t\tsetUser(UserData.nick);\n  // \t\t\tconsole.log(cookies.get(\"jwt_authorization\"));\n  // \t\t\tconsole.log(UserData);\n  // \t\t}\n  // \t}\n  //     fetchData();\n  //   }, [loaded]);\n\n  const handleFTLogin = () => {\n    window.location.href = 'https://api.intra.42.fr/oauth/authorize?client_id=u-s4t2ud-077b70076cf4de01892c573d0d5337b6b27cff2d6f67bb166eb7c187d1678e39&redirect_uri=http%3A%2F%2F10.12.14.1%3A3000&response_type=code';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginH1\",\n        children: \"Giri\\u015F Yap\\u0131n\\u0131z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginButton\",\n        onClick: handleFTLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: L42,\n          alt: \"\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"AGGg+wjbmzKtKs8WiqoZuwpOy9Y=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","L42","jsxDEV","_jsxDEV","Login","setUser","_s","data","setData","loaded","setLoaded","handleFTLogin","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/root/React/src/pages/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport L42 from '../images/42icon.png';\n// import { Button } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport Home from './Home';\nimport { cookies } from '../App';\n\nconst Login = ({setUser}) => {\n\n\n\tconst [data, setData] = useState(\"\");\n\tconst [loaded, setLoaded] = useState(false);\n\n// \tuseEffect(() => {\n// \t\tconst fetchData = async () => {\n// \t\t\tconst params = new URLSearchParams(window.location.search);\n// \t\t\tconst code = params.get('code');\n// \t\t\tconst data = {};\n// \t\t\tdata[\"data\"] = code;\n\n// \t\t\tif (!loaded) {\n// \t\t\t\tsetLoaded(true);\n// \t\t\t}\n// \t\t\telse if(code)\n// \t\t\t{\n// \t\t\t\tconst response = await fetch('http://10.12.14.1:80/auth/42/signin_intra', {\n// \t\t\t\tmethod: 'POST',\n// \t\t\t\theaders: {\n// \t\t\t\t\t'Content-Type': 'application/json',\n// \t\t\t\t},\n// \t\t\t\tbody: JSON.stringify( data ), // Assuming code is an object\n// \t\t\t});\n// \t\t\tconst responseData = await response.json();\n// \t\t\t// {token: Jwt_Token, result: 0} The new user has been saved in database and the token has been created.\n// \t\t\t// {token: Jwt_Token, result: 1} The user has already been saved in database and the token has been created.\n// \t\t\t// {user_id: user_id, result: 2} The user should be redirected to the TFA page.\n// \t\t\tif(responseData.result !== 2)\n// \t\t\t{\n// \t\t\t\tcookies.set(\"jwt_authorization\", responseData.token);\n// \t\t\t}\n// \t\t\telse\n// \t\t\t{\n// \t\t\t\t//TFA PAGE\n// \t\t\t}\n// \t\t\tconsole.log(responseData.token);\n// \t\t\tconst responseUser = await fetch(\"http://10.12.14.1:80/user\", {\n// \t\t\t\theaders: {\n// \t\t\t\t\t'authorization': 'Bearer ' + cookies.get(\"jwt_authorization\"),\n// \t\t\t\t\t'Content-Type': 'application/json'\n// \t\t\t\t}\n// \t\t\t});\n// \t\t\tconst UserData = await responseUser.json();\n// \t\t\tsetUser(UserData.nick);\n// \t\t\tconsole.log(cookies.get(\"jwt_authorization\"));\n// \t\t\tconsole.log(UserData);\n// \t\t}\n// \t}\n//     fetchData();\n//   }, [loaded]);\n\n\n  const handleFTLogin = () => {\n\twindow.location.href=('https://api.intra.42.fr/oauth/authorize?client_id=u-s4t2ud-077b70076cf4de01892c573d0d5337b6b27cff2d6f67bb166eb7c187d1678e39&redirect_uri=http%3A%2F%2F10.12.14.1%3A3000&response_type=code');\n};\n\n  return (\n    <div className=\"login\">\n      <div className=\"wrapper\">\n        <h1 className=\"loginH1\">Giriş Yapınız</h1>\n\n        <div className=\"loginButton\" onClick={handleFTLogin}>\n          <img src={L42} alt=\"\" className=\"icon\" />\n          Login\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAElD,OAAOC,GAAG,MAAM,sBAAsB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAG5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE5C;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC7BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAE,4LAA6L;EACpN,CAAC;EAEC,oBACEX,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBb,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBb,OAAA;QAAIY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1CjB,OAAA;QAAKY,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEV,aAAc;QAAAK,QAAA,gBAClDb,OAAA;UAAKmB,GAAG,EAAErB,GAAI;UAACsB,GAAG,EAAC,EAAE;UAACR,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAE3C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAtEIF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAwEX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}